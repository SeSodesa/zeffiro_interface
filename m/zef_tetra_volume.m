function V = zef_tetra_volume(nodes, tetrahedra, take_absolute_value)
% VOLUME - Calculates a volume V from a given set of finite element nodes, the
% corresponding tetrahedra and suitable index matrix.

    arguments
        nodes (:,3) double {mustBeNonNan}
        tetrahedra (:,4) double {mustBeInteger, mustBePositive}
        take_absolute_value (1,1) logical
    end

    % Directed edges from 4th vertex of each tetrahedron.

    edges = [
        nodes(tetrahedra(:,1),:)';
        nodes(tetrahedra(:,2),:)';
        nodes(tetrahedra(:,3),:)'
    ] - repmat(nodes(tetrahedra(:,4),:)',3,1);

    % Index matrix used in the determinant calculation.

    ind_m = [1 4 7; 2 5 8 ; 3 6 9];

    % The volume itself as a determinant

    V = 1 / 6 * (                       ...
            edges(ind_m(1,1),:)       ...
            .*                          ...
            (                           ...
                edges(ind_m(2,2),:)   ...
                .*                      ...
                edges(ind_m(3,3),:)   ...
                -                       ...
                edges(ind_m(2,3),:)   ...
                .*                      ...
                edges(ind_m(3,2),:)   ...
            )                           ...
        -                               ...
            edges(ind_m(1,2),:)       ...
            .*                          ...
            (                           ...
                edges(ind_m(2,1),:)   ...
                .*                      ...
                edges(ind_m(3,3),:)   ...
                -                       ...
                edges(ind_m(2,3),:)   ...
                .*                      ...
                edges(ind_m(3,1),:)   ...
            )                           ...
        +                               ...
            edges(ind_m(1,3),:)       ...
            .*                          ...
            (                           ...
                edges(ind_m(2,1),:)   ...
                .*                      ...
                edges(ind_m(3,2),:)   ...
                -                       ...
                edges(ind_m(2,2),:)   ...
                .*                      ...
                edges(ind_m(3,1),:)   ...
            )                           ...
    );

    if take_absolute_value
        V = abs(V);
    end
end
