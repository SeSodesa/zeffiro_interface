function V = zef_tetra_volume(nodes, tetrahedra, take_absolute_value)

% Calculates a volume V from a given set of finite element nodes, the
% corresponding tetrahedra and suitable index matrix.
%
% inputs
% ------
%
% nodes: N √ó 3 float matrix, with each row containing the 3D coordinates of
% each node determining the domain Œ©.
%
% tetrahedra: M √ó 4 matrix, with each row containing the coordinates of the
% vertices or nodes of each tetrahedra in the discretized domain Œ©.
%
% take_obsolute_value: a boolean determining whether the absolute value of the
% volume is needed instead of the volume itself.
%
% output
% ------
%
% The volume ùëâ of the discretized system, calculated as a determinant.

    % A helper matrix to make the calculation more readable

    aux_mat = [
            nodes(tetrahedra(:,1),:)';
            nodes(tetrahedra(:,2),:)';
            nodes(tetrahedra(:,3),:)'
        ] - repmat(nodes(tetrahedra(:,4),:)',3,1);

    % Index matrix used in the determinant calculation.

    ind_m = [1 4 7; 2 5 8 ; 3 6 9];

    % The volume itself as a determinant

    V = 1 / 6 * (                   ...
        aux_mat(ind_m(1,1),:)       ...
        .*                          ...
        (                           ...
            aux_mat(ind_m(2,2),:)   ...
            .*                      ...
            aux_mat(ind_m(3,3),:)   ...
        -                           ...
            aux_mat(ind_m(2,3),:)   ...
            .*                      ...
            aux_mat(ind_m(3,2),:)   ...
        )                           ...
    -                               ...
        aux_mat(ind_m(1,2),:)       ...
        .*                          ...
        (                           ...
            aux_mat(ind_m(2,1),:)   ...
            .*                      ...
            aux_mat(ind_m(3,3),:)   ...
        -                           ...
            aux_mat(ind_m(2,3),:)   ...
            .*                      ...
            aux_mat(ind_m(3,1),:)   ...
        )                           ...
    +                               ...
        aux_mat(ind_m(1,3),:)       ...
        .*                          ...
        (                           ...
            aux_mat(ind_m(2,1),:)   ...
            .*                      ...
            aux_mat(ind_m(3,2),:)   ...
        -                           ...
            aux_mat(ind_m(2,2),:)   ...
            .*                      ...
            aux_mat(ind_m(3,1),:)   ...
        )                           ...
    );

    % Flip the sign of the volume, if needed.

    if take_absolute_value
        V = abs(V)
    end
end
